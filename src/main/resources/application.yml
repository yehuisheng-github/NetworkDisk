
#使用mybatis配置文件编写sql语句，指定全局配置文件、sql映射文件的位置
#mybatis:
#  config-location: classpath:mapper/mybatis.xml
#  mapper-locations:
#  - classpath:mapper/XmlMapper.xml     
  
spring: 
  #创建MySQL引擎
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
     
  # 创建数据源
  datasource:
    username: root
    password: zxcvbnm123
    url: jdbc:mysql://localhost:3306/networkdisk?serverTimezone=GMT%2B8
    driver-class-name: com.mysql.cj.jdbc.Driver
    initialization-mode: always
    # 切换druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    #指定位置：自定义文件名的sql文件
#    schema:
#    - classpath:xxxTable.sql
#    data: 
#    - classpath:xxxInsert.sql
     
    # 配置数据源
    druid:
      # 初始化连接数
      initialSize: 7
      # 最小连接数
      min-idle: 5
      # 最大连接数
      maxActive: 21
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 50000
      # 配置一个连接在池中最小生存的时间，单位是毫秒 
      minEvictableIdleTimeMillis: 300000
      
      #用来检测连接是否有效的sql，要求是一个查询语句。
      #如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
      validationQuery: SELECT 1 FROM DUAL
      #建议配置为true，不影响性能，并且保证安全性。
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testWhileIdle: true
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      testOnBorrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false
      
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      
      # 配置监控统计拦截的filters，stat:监控统计，log4j:日志，wall:防御SQL注入
      filters: stat,wall,slf4j
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      
      #开启druid数据源的监控后台的servlet，并设置用户名和密码
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: admin
      #开启druid数据源的实现监控的filter，并拦截路径和放行路径
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.css,*.jpg,/druid/*,/link-*"
      
      
      